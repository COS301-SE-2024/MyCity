name: Deploy API

on:
  pull_request:
    types:
      - closed
    branches: [main, development]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: backend
      run: |
        python -m pip install -r requirements.txt

    - name: Generate config.json
      working-directory: backend
      run: |
        cat <<EOF > .chalice/config.json
        {
          "version": "2.0",
          "app_name": "mycity-api",
          "environment_variables": {
            "USER_POOL_ID": "${{ secrets.USER_POOL_ID }}",
            "REST_API_AUTHORIZER": "${{ secrets.REST_API_AUTHORIZER }}",
            "USER_POOL_ARN": "${{ secrets.USER_POOL_ARN }}"
          },
          "stages": {
            "dev": {
              "api_gateway_stage": "dev",
              "environment_variables": {
                "API_ENV": "dev"
              }
            },
            "prod": {
              "api_gateway_stage": "prod",
              "environment_variables": {
                "API_ENV": "prod"
              }
            }
          }
        }
        EOF


    - name: Set up AWS CLI
      working-directory: backend
      run: |
        pip install awscli
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Deploy Chalice App
      working-directory: backend
      run: |
          if [ ${{ github.base_ref }} == 'main' ]; then
            chalice deploy --stage prod
          elif [ ${{ github.base_ref }} == 'development' ]; then
            chalice deploy --stage dev
          else
            echo "No deployment for this branch"
            exit 0
          fi
